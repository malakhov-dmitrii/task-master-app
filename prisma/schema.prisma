// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    telegramId Int      @unique
    fullName   String
    username   String
    chats      Chat[]   @relation(references: [id], fields: [chatsIds])
    chatsIds   String[] @db.ObjectId
    tasks      Task[]
}

model Chat {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    telegramId Int      @unique
    name       String
    users      User[]   @relation(references: [id], fields: [usersIds])
    usersIds   String[] @db.ObjectId
    tasks      Task[]
    agenda     Agenda?
}

model Task {
    id                     String    @id @default(auto()) @map("_id") @db.ObjectId
    chatId                 String    @db.ObjectId
    chat                   Chat      @relation(fields: [chatId], references: [id], onDelete: Cascade)
    text                   String
    messageId              Int
    serviceMessages        Int[]
    assignee               User?     @relation(references: [id], fields: [assigneeId], onDelete: SetNull)
    assigneeId             String?   @db.ObjectId
    done                   Boolean   @default(false)
    confirmed              Boolean   @default(false)
    estimateCompletionDate DateTime?
    deadline               DateTime?
    createdAt              DateTime  @default(now())
    updatedAt              DateTime  @updatedAt
}

model Agenda {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    chatId    String   @unique @db.ObjectId
    chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    text      String
    messageId Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
